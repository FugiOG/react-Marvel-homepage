{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newItemLoading","Error","ComicsList","useState","comics","setComics","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","limit","useMarvelService","getAllComics","clearError","setProcess","useEffect","updateComics","onComicsLoaded","newComicsList","ended","length","comicsList","item","initial","then","className","arr","elements","map","i","id","title","price","thumbnail","tabIndex","to","src","alt","renderItems","disabled","style","onClick","ComicsPage","Helmet","name","content","AppBanner","ErrorBoundary","ErrorMessage","img","display","width","height","objectFit","margin","request","useCallback","url","a","method","body","headers","fetch","response","ok","status","json","data","useHttp","_apiBase","_apiKey","res","results","_transformComics","getComic","getAllCharacters","_transformCharacter","getCharacters","getCharacterByName","char","description","slice","fullDescription","path","extension","homepage","urls","wiki","items","comicsId","resourceURI","prices","pageCount","language","textObjects","state","error","errorInfo","console","log","this","setState","props","children","avengers","avengersLogo"],"mappings":"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","file":"static/js/8.b20cf6db.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process){\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default: \n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n    const [comics, setComics] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n    const [limit, setLimit] = useState(8);\n    const { getAllComics, clearError, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        updateComics(offset, limit, true);\n        // eslint-disable-next-line\n    }, []);\n\n    const onComicsLoaded = (newComicsList) => {\n        let ended = newComicsList.length < 8;\n\n        setComics(comicsList => [...comicsList, ...newComicsList])\n        setNewItemLoading(item => false);\n        setOffset(offset => offset + limit);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    const updateComics = (offset, limit, initial) => {\n        clearError();\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset, limit)\n            .then(onComicsLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    function renderItems (arr){\n        const elements = arr.map((item, i) => {\n            const {id, title, price, thumbnail} = item;\n\n            return (\n                <li key={i} tabIndex={0} className=\"comics__item\">\n                    <Link to={`/react-Marvel-homepage/comics/${id}`}>\n                        <img src={thumbnail} alt={title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {elements}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comics), newItemLoading)}\n               \n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => updateComics(offset, limit)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                    />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList />\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} alt=\"\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=c65c6c4f74077c85f47223756e7b0505';\r\n    const _baseOffset = 210;\r\n    const _baseLimit = 9;\r\n    const _comicsLimit = 8;\r\n    const _comicsOffset = 100;\r\n\r\n    const getAllComics = async (offset = _comicsOffset, limit = _comicsLimit) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset, limit = _baseLimit) => {\r\n        const res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacters = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'description is missing',\r\n            fullDescription: char.description || 'description is missing',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items,\r\n            comicsId: char.comics.items.map(item => item.resourceURI.slice(-5))\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description,\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available',\r\n            thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            language: comics.textObjects.language || 'en-us'\r\n        }\r\n    }\r\n\r\n    return {getAllCharacters,\r\n            process,\r\n            setProcess,\r\n            getCharacters, \r\n            clearError, \r\n            getAllComics, \r\n            getComic, \r\n            getCharacterByName}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback  } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\r\n\r\n        setProcess('loading')\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if(!response.ok){\r\n                throw new Error(`Couldn't fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            setProcess('error')\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading')\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess}\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}