{"version":3,"sources":["resources/img/mjolnir.png","services/MarvelService.js","hooks/http.hook.js","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllComics","offset","limit","res","results","map","_transformComics","getAllCharacters","_transformCharacter","getCharacters","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","price","prices","pageCount","language","textObjects","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","objectFit","alt","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","characters","setCharacters","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharacters","ended","length","item","itemRefs","useRef","elements","arr","index","ref","el","current","onCharSelected","forEach","classList","remove","add","focus","focusOnItem","tabIndex","renderItems","disabled","Skeleton","i","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","setComics","comicsEnded","setComicsEnded","updateComics","onComicsLoaded","newComicsList","comicsList","ComicsPage","AppHeader","to","end","isActive","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e28884f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=c65c6c4f74077c85f47223756e7b0505';\r\n    const _baseOffset = 210;\r\n    const _baseLimit = 9;\r\n    const _comicsLimit = 8;\r\n    const _comicsOffset = 100;\r\n\r\n    const getAllComics = async (offset = _comicsOffset, limit = _comicsLimit) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset, limit = _baseLimit) => {\r\n        const res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacters = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'description is missing',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description,\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n            thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            language: comics.textObjects.language || 'en-us'\r\n        }\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacters, clearError, getAllComics}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback  } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\r\n        \r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if(!response.ok){\r\n                throw new Error(`Couldn't fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","const Spinner = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n  )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} alt=\"\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacters, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacters(id)\n            .then(onCharLoaded);\n    }\n    \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = error || loading ? null : <View char={char}/> \n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage} \n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = null;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle = {objectFit: \"contain\"};\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n} \n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\n\nconst CharList = (props) => {\n\n    const [characters, setCharacters] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n    const [limit, setLimit] = useState(9);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, limit, true);\n    }, [])\n\n    const onRequest = (offset, limit, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset, limit)\n            .then(onCharListLoaded);\n    }\n\n    const onCharListLoaded = (newCharacters) => {\n        let ended = false;\n\n        if (newCharacters.length < 9){\n            ended = true;\n        }\n\n        setCharacters(characters => [...characters, ...newCharacters]);\n        setNewItemLoading(item => false);\n        setOffset(offset => offset + limit);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems (arr) {\n        const elements = arr.map((item, index)=> {\n            const {name, thumbnail, id} = item;\n\n            let imgStyle = null;\n            if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n                imgStyle = {objectFit: \"contain\"};\n            }\n\n            return (\n                <li ref={el => itemRefs.current[index] = el} \n                    className=\"char__item\" \n                    key={id} \n                    onClick={() => {\n                        props.onCharSelected(id)\n                        focusOnItem(index)\n                    }}\n                    tabIndex={0}>\n\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return( \n            <ul className=\"char__grid\">\n                {elements}\n            </ul>\n        )\n    }\n\n    const elements = renderItems(characters);\n    \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {elements}\n            <button \n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset, limit)}\n                disabled={newItemLoading}\n                style={{display: charEnded ? \"none\" : \"block\"}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacters, clearError} =  useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () =>{\n        const {charId} = props;\n        if(!charId){\n            return;\n        }\n\n        clearError();\n\n        getCharacters(charId)\n            .then(onCharLoaded);\n    }\n\n\n    const skeleton = (loading || error || char) ? null : <Skeleton/>;\n    const spinner = loading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {spinner}\n            {errorMessage}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = null;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle = {objectFit: \"contain\"};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"Comics is missing\"}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) {\n                            return;\n                        }\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\n\nconst ComicsList = () => {\n    const [comics, setComics] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n    const [limit, setLimit] = useState(8);\n    const {loading, error, getAllComics, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateComics(offset, limit, true);\n    }, []);\n\n    const onComicsLoaded = (newComicsList) => {\n        let ended = newComicsList.length < 8;\n\n        setComics(comicsList => [...comicsList, ...newComicsList])\n        setNewItemLoading(item => false);\n        setOffset(offset => offset + limit);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    const updateComics = (offset, limit, initial) => {\n        clearError();\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset, limit)\n            .then(onComicsLoaded);\n    }\n\n    function renderItems (arr){\n        const elements = arr.map(item => {\n            const {id, title, price, thumbnail} = item;\n\n            return (\n                <li key={id} tabIndex={0} className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={thumbnail} alt={title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </a>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {elements}\n            </ul>\n        )\n    }\n\n    const elements = renderItems(comics)\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {elements}\n            {errorMessage}\n            {spinner}\n               \n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => updateComics(offset, limit)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from '../appBanner/AppBanner';\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList />\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import { Link, NavLink } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                    end \n                    style={({isActive}) => ({'color': isActive ? '#9F0013' : '#232222'})} \n                    to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                    end \n                    style={({isActive}) => ({'color': isActive ? '#9F0013' : '#232222'})}  \n                    to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\n\nimport { MainPage, ComicsPage } from '../pages';\nimport AppHeader from \"../appHeader/AppHeader\";\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path='/' element={<MainPage/>} />\n                        <Route path='/comics' element={<ComicsPage/>} />\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n// import MarvelService from './services/MarvelService';\nimport './style/style.scss';\n\n// const marvelService = new MarvelService();\n// marvelService.getAllCharacters().then(res => res.data.results.forEach(item => console.log(item.name)));\n\n// marvelService.getCharacters(1011052).then(res => console.log(res));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}