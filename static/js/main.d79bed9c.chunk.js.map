{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","_baseLimit","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","limit","data","results","map","_transformCharacter","getCharacters","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","objectFit","alt","RandomChar","state","loading","error","onError","setState","marvelService","onCharLoaded","updateChar","Math","floor","random","onCharLoading","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","characters","newItemLoading","charEnded","itemRefs","onRequest","onCharListLoading","onCharListLoaded","newCharacters","ended","length","setRefs","elem","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","elements","index","ref","props","onCharSelected","tabIndex","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d79bed9c.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=0e57a1d348df96e8ce0031412b96a93c';\r\n    _baseOffset = 210;\r\n    _baseLimit = 9;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok){\r\n            throw new Error(`Couldn't fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    } \r\n\r\n    getAllCharacters = async (offset = this._baseOffset, limit = this._baseLimit) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=${limit}&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacters = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'description is missing',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n  )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} alt=\"\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nclass RandomChar extends Component {\n\n    state = {\n        char : {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    marvelService = new MarvelService();\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacters(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = error || loading ? null : <View char={char}/> \n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage} \n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = null;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle = {objectFit: \"contain\"};\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n} \n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\n\nclass CharList extends Component{\n    state = {\n        characters: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false,\n        limit: 9,\n    }\n\n    itemRefs = []\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset, limit) => {\n        this.onCharListLoading();\n        this.marvelService\n            .getAllCharacters(offset, limit)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    onCharListLoaded = (newCharacters) => {\n        let ended = false;\n\n        if (newCharacters.length < 9){\n            ended = true;\n        }\n\n        this.setState(({characters, offset, limit}) => ({\n            characters: [...characters, ...newCharacters],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + limit,\n            charEnded: ended,\n        }))\n\n    }\n\n    setRefs = (elem) => {\n        this.itemRefs.push(elem);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems (arr) {\n        const elements = arr.map((item, index)=> {\n            const {name, thumbnail, id} = item;\n\n            let imgStyle = null;\n            if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n                imgStyle = {objectFit: \"contain\"};\n            }\n\n            return (\n                <li ref={this.setRefs} \n                    className=\"char__item\" \n                    key={id} \n                    onClick={() => {\n                        this.props.onCharSelected(id)\n                        this.focusOnItem(index)\n                    }}\n                    tabIndex={0}>\n\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return( \n            <ul className=\"char__grid\">\n                {elements}\n            </ul>\n        )\n    }\n\n    render() {\n        const {characters, error, loading, newItemLoading, offset, charEnded, limit} = this.state;\n\n        const elements = this.renderItems(characters);\n        \n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = error || loading ? null : elements;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    onClick={() => this.onRequest(offset, limit)}\n                    disabled={newItemLoading}\n                    style={{display: charEnded ? \"none\" : \"block\"}}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nclass CharInfo extends Component {\n    state = {\n        char : null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount(){\n        this.updateChar();\n    }\n\n\n    componentDidUpdate(prevProps) {\n        if(this.props.charId !== prevProps.charId){\n            this.updateChar();\n        }\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n\n\n    updateChar = () =>{\n        const {charId} = this.props;\n        if(!charId){\n            return;\n        }\n        this.onCharLoading();\n        this.marvelService\n            .getCharacters(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    \n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = (loading || error || char) ? null : <Skeleton/>;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = null;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle = {objectFit: \"contain\"};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"Comics is missing\"}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) {\n                            return;\n                        }\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    \n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n// import MarvelService from './services/MarvelService';\nimport './style/style.scss';\n\n// const marvelService = new MarvelService();\n// marvelService.getAllCharacters().then(res => res.data.results.forEach(item => console.log(item.name)));\n\n// marvelService.getCharacters(1011052).then(res => console.log(res));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}